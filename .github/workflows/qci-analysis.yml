name: QCI Analysis - Automated Quality Scoring

on:
  schedule:
    # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00 UTC (05:00 MSK)
    - cron: '0 2 * * *'
  workflow_dispatch:
    # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å –æ–ø—Ü–∏—è–º–∏
    inputs:
      test_mode:
        description: 'Test mode (analyze only 50 longest calls)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'  # Production mode - analyze all
          - 'true'   # Test mode - 50 calls

jobs:
  qci-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run QCI Analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          cd production_scripts/qci_analysis

          # Enable test mode if requested
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "Running in TEST MODE (50 calls)"
            # Temporary edit CONFIG.TESTING.ENABLED to true
            sed -i 's/ENABLED: false/ENABLED: true/' qci_analyzer.js
          else
            echo "Running in PRODUCTION MODE (all calls)"
          fi

          # Run QCI analyzer (fetches from Supabase, analyzes, saves to Supabase)
          node qci_analyzer.js

          echo "‚úÖ QCI analysis completed"

      - name: Upload results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qci-results-${{ github.run_number }}
          path: production_scripts/qci_analysis/results/qci_latest.json
          retention-days: 30
          if-no-files-found: ignore

      - name: Check run status in Supabase
        if: always()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "üìä Check detailed logs in Supabase:"
          echo "SELECT * FROM runs WHERE script_name = 'qci-analysis' ORDER BY started_at DESC LIMIT 1;"
          echo "SELECT * FROM logs WHERE run_id = (SELECT id FROM runs WHERE script_name = 'qci-analysis' ORDER BY started_at DESC LIMIT 1);"

      - name: Summary
        if: success()
        run: |
          echo "‚úÖ QCI Analysis Workflow Completed Successfully"
          echo "üìä Results saved to Supabase qci_analyses table"
          echo "üîç View dashboard at: https://vapi-analytics.vercel.app/logs"
